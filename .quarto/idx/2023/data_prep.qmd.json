{"title":"Visualizing relationships five different ways","markdown":{"yaml":{"title":"Visualizing relationships five different ways","format":"html","editor":"visual"},"headingText":"One data set, Five visualizations (technically two data sets)","containsRefs":false,"markdown":"\n\n\nBefore you do anything at all...\n\n# Update your software\n\nMake sure you have the latest versions of R and RStudio installed.\n\nA lot of these new tools we're using depend on the latest builds of R and RStudio to work correctly.\n\n* [Latest version of R](https://cran.r-project.org/)\n* [Latest version of RStudio](https://posit.co/download/rstudio-desktop/)\n\nNo, seriously, do it.\n\n# Install packages \n\nCopy and paste the following lines of code into your RStudio console.\n\n```{r}\n#| eval: FALSE\n\n# Checking if the packages you need are installed -- if not, it will install for you\npackages <- c(\"tidyverse\", \"usethis\", \"devtools\", \n              \"remotes\", \"lubridate\", \"knitr\", \n              \"janitor\", \"geofacet\", \"ggrepel\", \n              \"png\", \"gifski\", \"sf\", \"tigris\", \n              \"cowplot\", \"biscale\", \"ggtext\")\n\nif (length(setdiff(packages, rownames(installed.packages()))) > 0) {\n  install.packages(setdiff(packages, rownames(installed.packages())), \n                   repos = \"https://cran.us.r-project.org\")  \n}\n\ndevtools::install_github('wpinvestigative/arcos')\n\nusethis::use_course(\"https://github.com/r-journalism/nicar-2023-fancier-viz/archive/master.zip\")\n```\n\nThe last line of code you ran will walk you through installing the class materials to your desktop. Select yes at the right points.\n\nWhen you're done downloading the files, you can move on to [**geofacet**](geofacet.html). \n\nLater on you can follow these steps on how to download and transform the data used in these walkthroughs below.\n\n# Data for the walkthroughs\n\nThe opioid transaction data from the DEA and opioid deaths data from the CDC needed for these walkthroughs have already been downloaded and transformed. The steps below exist for transparency.\n\n# Preparing state data\n\n## Get annual opioid sales data from ARCOS api\n\nThe Washington Post [published](https://www.washingtonpost.com/national/2019/07/18/how-download-use-dea-pain-pills-database/) a significant portion of a [database](https://www.washingtonpost.com/graphics/2019/investigations/dea-pain-pill-database/) that tracks the path of every opioid pain pill, from manufacturer to pharmacy, in the United States between 2006 and 2014. The data below is pulled from an [API](https://wpinvestigative.github.io/arcos/) that the Post created to make it easier to query the data.\n\nWe'll pull opioid sales data by year.\n\n```{r}\n#| warning: false\n#| message: false\n\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(janitor)\n\ndevtools::install_github('wpinvestigative/arcos')\nlibrary(arcos)\n\nstates <- combined_buyer_annual(key=\"WaPo\") %>% \n  clean_names()\n\nstates %>% \n  head() %>% \n  kable()\n```\n\n## Transform the data\n\nNext, we'll summarize the data by state and year.\n\n```{r}\n#| warning: false\n#| message: false\n\n\nstate_names <- c(state.name, \"District of Columbia\")\nstate_abbr <- c(state.abb, \"DC\")\n\nstate_names <- data.frame(state=state_names, buyer_state=state_abbr)\n\nannual_states <- states %>% \n  group_by(buyer_state, year) %>% \n  summarize(pills=sum(dosage_unit)) %>% \n  left_join(state_names) %>% \n  filter(!is.na(state))\n\nannual_states %>% \n  head() %>% \n  kable()\n```\n\n## Get annual opioid overdose data from the CDC\n\nNCHS data is compiled in the CDC WONDER [online tool](https://wonder.cdc.gov). To retrieve these data from the tool: \n\n• Select the [Multiple Cause of Death](https://wonder.cdc.gov/mcd.html) (Detailed Mortality) query system; \n• Select table layout (for example, by year, state, county); and \n• Supply the appropriate underlying codes (X and Y code) and contributing codes (T codes) \n\n  * X40 - X44 \n  * X60 - X64 \n  * X85 \n  * Y10 - Y14 \n  * T40.0 - T40.4, T40.6\n\nThe data imported below was exported from the CDC Wonder data portal.\n\n```{r }\n#| warning: false\n#| message: false\n\nstate_cdc <- read_tsv(\"data/od_deaths_state.csv\") %>% \n  filter(is.na(Notes)) %>% \n  clean_names()\n\nstate_cdc %>% \n  head() %>% \n  kable()\n```\n\n## Join the state data\n\nBringing together the sales data with the deaths data.\n\n```{r}\nstate_joined <- annual_states %>% \n  left_join(state_cdc) %>% \n  select(-notes, -state_code, -year_code)\n\nstate_joined %>% \n  head() %>% \n  kable()\n```\n\n## Wrangle the data\n\nLet's calculate rates.\n\nAdditionally, let's add in state categories and divisions.\n\nThen, we'll save it.\n\n```{r}\nstate_joined <- state_joined %>% \n  mutate(pills_per_person=round(pills/population,1)) %>% \n  mutate(death_per_1m=round(deaths/population*1000000,1)) %>% \n # rename(death_rate=crude_rate) %>% \n  pivot_longer(cols=c(\"death_per_1m\", \"pills_per_person\"),\n               names_to=\"type\",\n               values_to=\"rate\")\n\nregions <- read_csv(\"https://github.com/cphalpert/census-regions/raw/master/us%20census%20bureau%20regions%20and%20divisions.csv\") %>% \n  clean_names()\n\nstate_joined <- left_join(state_joined, regions)\nwrite_csv(state_joined, \"data/opioids_states.csv\", na=\"\")\n```\n\n# County data annual\n\nLet's do the same thing but with county levle data.\n\n## Get annual opioid sales data from ARCOS api\n\nOnce again, we'll pull from the Post ARCOS api.\n\n```{r}\npharm_c <- summarized_county_annual(key=\"WaPo\") %>% \n  clean_names()\n\npharm_c %>% \n  head() %>% \n  kable()\n```\n\n## Transform the data\n\n## Get annual opioid overdose data from the CDC\n\nFollowed the same steps as we did for state data but for counties.\n\n```{r }\n#| warning: false\n#| message: false\n\ncounty_cdc <- read_tsv(\"data/od_deaths_county.csv\") %>% \n  filter(is.na(Notes)) %>% \n  clean_names() %>% \n  rename(countyfips=county_code)\n\ncounty_cdc %>% \n  head() %>% \n  kable()\n```\n\n## Join the county data\n\n```{r}\ncounty_joined <- pharm_c %>% \n  full_join(county_cdc) %>% \n  select(-notes, -state_code, -year_code, -age_adjusted_rate)\n\ncounty_joined %>% \n  head() %>% \n  kable()\n```\n\n## Wrangle the data\n\nCalculating rates and saving the data.\n\n```{r}\n# first have to bring in accurate population counts for counties annually\ncounty_pops <- county_population(key = \"WaPo\") %>% \n  select(countyfips, year, population)\n\ncounty_joined <- county_joined %>% \n  select(-population) %>% \n  left_join(county_pops) %>% \n  mutate(pills_per_person=round(dosage_unit/population,1)) %>% \n  mutate(death_per_100k=round(deaths/population*100000,1)) %>% \n # rename(death_rate=crude_rate) %>% \n  pivot_longer(cols=c(\"death_per_100k\", \"pills_per_person\"),\n               names_to=\"type\",\n               values_to=\"rate\")\n\nwrite_csv(county_joined, \"data/opioids_counties.csv\", na=\"\")\n```\n\n# County data combined\n\nLet's do it one more time but for all deaths between 2006 and 2014 combined.\n\n## Get annual opioid sales data from ARCOS api\n\nThis time we'll summarize it.\n\n```{r}\npharm_c <- summarized_county_annual(key=\"WaPo\") %>% \n  clean_names()\n\npharm_c_combined <- pharm_c %>% \n  group_by(buyer_county, buyer_state, countyfips) %>% \n  summarize(count=sum(count, na.rm=T),\n            dosage_unit=sum(dosage_unit, na.rm=T))\n\npharm_c_combined %>% \n  head() %>% \n  kable()\n```\n\n## Get annual opioid overdose data from the CDC\n\n```{r }\n#| warning: false\n#| message: false\n\ncounty_cdc <- read_tsv(\"data/od_deaths_counties_combined.csv\") %>% \n  filter(is.na(Notes)) %>% \n  clean_names() %>% \n  rename(countyfips=county_code)\n\ncounty_cdc %>% \n  head() %>% \n  kable()\n```\n\n## Join the county data\n\n```{r}\ncounty_joined <- pharm_c_combined %>% \n  full_join(county_cdc) %>% \n  select(-notes, -state_code, -crude_rate)\n\ncounty_joined %>% \n  head() %>% \n  kable()\n```\n\n## Wrangle the data\n\nCalculating rates.\n\n```{r}\ncounty_pops <- county_pops %>% \n  filter(year==2014) %>% \n  select(countyfips, year, population)\n\ncounty_joined <- county_joined %>% \n  select(-population) %>% \n  left_join(county_pops) %>% \n  mutate(pills_per_person=round(dosage_unit/population,1)) %>% \n  mutate(death_per_100k=round(deaths/population*100000,1)) %>% \n # rename(death_rate=crude_rate) %>% \n  pivot_longer(cols=c(\"death_per_100k\", \"pills_per_person\"),\n               names_to=\"type\",\n               values_to=\"rate\")\n\nwrite_csv(county_joined, \"data/opioids_counties_combined.csv\", na=\"\")\n```\n\nNext, we'll move on to first steps in visualizing these data sets.\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"data_prep.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.251","theme":"cosmo","title":"Visualizing relationships five different ways","editor":"visual"},"extensions":{"book":{"multiFile":true}}}}}