{"title":"leaflet tilegrams","markdown":{"yaml":{"title":"leaflet tilegrams","format":"html","editor":"visual"},"headingText":"There is no need to run these install lines below if you already have done so","containsRefs":false,"markdown":"\n\n\nWho says a map has to reflect pre-established boundaries?\n\nCartograms, tilegrams, hexagrams, chartagrams-- you can connect proportional polygons to whatever data you like and let visitors explore it interactively.\n\nThe repo containing the data and scripts for this section is on Github. \nTo follow along, simply run the lines of code below in R.\n\n-----\n\n```{r, eval =F}\ninstall.packages(\"usethis\")\nusethis::use_course(\"https://github.com/andrewbtran/NICAR-2020-mapping/archive/master.zip\")\n\n# This section is in scripts/04_leaflet_tilegrams.R\nfile.edit(\"scripts/04_leaflet_tilegrams.R\")\n\n```\n\n-----\n\nThanks to the efforts of others (Basically one person, Bhaskar Karambelar), you don't have to do this quite from scratch anymore.\n\n**We won't be going over this in class, as it is more of a demonstration. The code below is from Karambelar's sites.**\n\nInterested in digging into this more?\n\n* [Using TilegramsR](https://cran.r-project.org/web/packages/tilegramsR/vignettes/UsingTilegramsInR.html)\n* More TilegramsR [examples](https://rpubs.com/bhaskarvk/tilegramsR)\n\nGet ready to load a lot of packages, though.\n\n```{r, warning=F, message=F}\n# This function checks if you don't have the correct packages installed yet\n# If not, it will install it for you\npackages <- c(\"devtools\", \"purrr\", \"dplyr\",\n              \"htmlwidgets\", \"stringr\", \"rvest\", \"xml2\",\n              \"htmltools\", \"leaflet\", \"tilegramsR\",\n              \"leaflet.extras\", \"colormap\")\nif (length(setdiff(packages, rownames(installed.packages()))) > 0) {\n  install.packages(setdiff(packages, rownames(installed.packages())), repos = \"https://cran.us.r-project.org\")  \n}\n\nif (!\"usgazetteer\" %in% rownames(installed.packages())) {\n  devtools::install_github('bhaskarvk/usgazetteer')\n}\n\nlibrary(devtools)\nlibrary(purrr)\nlibrary(dplyr)\nlibrary(htmlwidgets)\nlibrary(stringr)\nlibrary(rvest)\nlibrary(xml2)\nlibrary(htmltools)\nlibrary(leaflet)\nlibrary(leaflet.extras)\nlibrary(tilegramsR)\nlibrary(colormap)\nlibrary(usgazetteer)\n\n## Need to set up some leaflet crs projection options\n## Restricting zooming and panning\n\ngetLeafletOptions <- function(minZoom, maxZoom, ...) {\n  leafletOptions(\n    crs = leafletCRS(\"L.CRS.Simple\"),\n    minZoom = minZoom, maxZoom = maxZoom,\n    dragging = FALSE, zoomControl = FALSE,\n    tap = FALSE,\n    attributionControl = FALSE , ...)\n}\n\n## Coming up with a color palette\ngetFactorPal <- function(f) {\n  colorFactor(colormap::colormap(\n    colormap = colormap::colormaps$hsv,\n    nshades = length(f)), f)\n}\n```\n\n## Washington Post grid\n\nHere's the [original inspiration](https://www.washingtonpost.com/graphics/politics/2016-election/50-state-poll/). \n\n```{r wapo_grid, warning=F, message=F, fig.width=8, fig.height=5}\nleaflet(\n  options= getLeafletOptions(0.1, 0.1)) %>%\n  addPolygons(\n    data=sf_WP, group = 'states',\n    weight=1,color='#000000', fillOpacity = 0.5, opacity=0.7,\n    fillColor= ~getFactorPal(id)(id),\n    highlightOptions = highlightOptions(weight = 3)) %>%\n  addLabelOnlyMarkers(\n    data=sf_WP.centers,\n    label = ~as.character(id),\n    labelOptions = labelOptions(\n      noHide = 'T', textOnly = T, offset=c(-4,0), textsize = '12px',\n      direction=\"auto\")) %>%\n  setMapWidgetStyle()\n```\n\n## Make your own\n\n![](images/make_your_own.png)\n\nYou can create your own tiled maps on [this website](https://pitchinteractiveinc.github.io/tilegrams/) and export it to be used with R or elsewhere.\n\n## Reproducing 538's forecast map\n\nThis is based on the [original here](https://projects.fivethirtyeight.com/2016-election-forecast/).\n\n```{r one_last_option, warning=F, message=F, fig.width=8, fig.height=5}\nleaflet(\n  options= getLeafletOptions(-1.5, -1.5)) %>%\n  addPolygons(\n    data=sf_FiveThirtyEightElectoralCollege,\n    weight=1,color='#000000', fillOpacity = 0.5, opacity=0.2,\n    fillColor= ~getFactorPal(state)(state)) %>%\n  addPolygons(\n    data=sf_FiveThirtyEightElectoralCollege.states, group = 'states',\n    weight=2,color='#000000',\n    fill = T, opacity = 1, fillOpacity = 0,\n    highlightOptions = highlightOptions(weight = 4)) %>%\n  addLabelOnlyMarkers(\n    data=sf_FiveThirtyEightElectoralCollege.centers,\n    label = ~as.character(state),\n    labelOptions = labelOptions(\n      noHide = 'T', textOnly = T,\n      offset=c(-8,-20), textsize = '15px')) %>%\n  setMapWidgetStyle()\n```\n\n## Adding data and style to 538's map\n\n```{r map_538, warning=F, message=F, fig.width=8, fig.height=5}\nlibrary(magrittr)\n\n# The URL for election forecast\nurl <- 'https://projects.fivethirtyeight.com/2016-election-forecast/?ex_cid=2016-senate-forecast'\n\ng <- xml2::read_html(url)\n\n# These divs hold our data\nstate.winprobs <- g %>% rvest::html_nodes('.cards')\nstate.winprobs <- state.winprobs[2:52] # Select only state data\n\n# How many electoral votes per state\nelectoral.votes <- purrr::map_chr(state.winprobs,\n                         function(winprob) {\n                           winprob %>%\n                             rvest::html_node('p.top-powerbar') %>%\n                             rvest::html_text()\n                         }) %>%\n  stringr::str_extract('[0-9]+') %>% as.numeric()\n\n# 2 letter abbreviations for the states\nstates <- purrr::map_chr(state.winprobs,\n                         function(winprob) {\n                           winprob %>%\n                             rvest::html_node('div.card-winprob') %>%\n                             rvest::html_attr('data-card-id')\n                         }) %>%\n  stringr::str_extract('^..')\n\n# Winning probability per state of Democrats.\ndem.winprobs <- purrr::map_chr(state.winprobs,\n                               function(winprob) {\n                                 winprob %>%\n                                   rvest::html_nodes('div.dem p.winprob') %>%\n                                   rvest::html_text()\n                               }) %>%\n  stringr::str_replace_all('[^0-9\\\\.]','') %>% as.numeric()\n\n# Winning probability per state of Republicans.\nrep.winprobs <- purrr::map_chr(state.winprobs,\n                               function(winprob) {\n                                 winprob %>%\n                                   rvest::html_nodes('div.rep p.winprob') %>%\n                                   rvest::html_text()\n                               }) %>%\n  stringr::str_replace_all('[^0-9\\\\.]','') %>% as.numeric()\n\n# Combine into a data.frame\nwinprobs <- data.frame(state=states,\n                       electoral.votes=electoral.votes,\n                       dem.winprob=dem.winprobs,\n                       rep.winprob=rep.winprobs) %>%\n  dplyr::mutate(\n    who=factor(ifelse(dem.winprob>rep.winprob,'D','R')))\n\n# Join with the spatial data from tilegramsR package\nspdf <- FiveThirtyEightElectoralCollege.states\nspdf@data %<>% dplyr::left_join(winprobs, by=c('state'='state'))\n\n# This is our pretty hover content\nspdf@data$hoverText <- mapply(\n  function(st, vts, dem, rep, w) {\n    htmltools::HTML(\n      sprintf(\n        \"<div style='font-size:12px;width:200px;float:left'>\n            <span style='font-size:18px;font-weight:bold'>%s</span><br/>\n            Chances of Winning<br/>\n            <div style='width:95%%'>\n              <span style='float:left'>Clinton</span>\n              <span style='float:right'>Trump</span>\n              <br/>\n              <span style='color:#2aa1ec;float:left'>%s%%</span>\n              <span style='color:#fe6a59;float:right'>%s%%</span><br clear='all'/>\n              <span style='background:#2aa1ec;width:%s%%;float:left'>&nbsp;</span>\n              <span style='background:#fe6a59;width:%s%%;float:right'>&nbsp;</span>\n            </div>\n            <br/><span style='font-size:10px'>%s electoral Votes</span>\n        </div>\",\n        usgazetteer::state.areas.2010$State[\n          which(usgazetteer::state.areas.2010$USPS==st)],\n        dem, rep,\n        dem, rep,\n        vts\n      )\n    )\n  },\n  spdf@data$state, spdf@data$electoral.votes,\n  spdf@data$dem.winprob, spdf@data$rep.winprob,\n  spdf@data$who, SIMPLIFY = F) %>%\n  set_names(spdf@data$states)\n\n# Dems are blue and Reps are red.\nfactpal <- colorFactor(c(\"#2aa1ec\", \"#fe6a59\"), spdf@data$who)\n\nleaflet(options=leafletOptions(\n  crs = leafletCRS(\"L.CRS.Simple\"),\n  minZoom = -1.5, maxZoom = -1.5,\n  dragging = FALSE, zoomControl = FALSE,\n  attributionControl = FALSE)) %>%\n  addPolygons(\n    data=FiveThirtyEightElectoralCollege, group = 'college',\n    weight=1,color='#000', fill=F, opacity=0.3) %>%\n  addPolygons(\n    data=spdf, group = 'states',\n    weight=1, color='#222',\n    fillColor= ~factpal(who), fill = T, opacity = 1,\n    fillOpacity = ~ifelse(who=='D',(dem.winprob/100)-0.1,\n                          (rep.winprob/100)-0.1),\n    label=~hoverText,\n    labelOptions = labelOptions(\n      offset = c(-100,-140),\n      #direction='bottom',\n      textOnly = T,\n      style=list(\n        'background'='rgba(255,255,255,0.95)',\n        'border-color' = 'rgba(0,0,0,1)',\n        'border-radius' = '4px',\n        'border-style' = 'solid',\n        'border-width' = '4px')),\n    highlightOptions = highlightOptions(weight = 3, bringToFront = TRUE)) %>%\n  addLabelOnlyMarkers(\n    data=FiveThirtyEightElectoralCollege.centers,\n    label = ~as.character(state),\n    labelOptions = labelOptions(\n      noHide = 'T', textOnly = T,\n      offset=c(-5,-10), textsize = '15px',\n      style=list('color'='black')) )  %>%\n  htmlwidgets::onRender(\n    \"function(el, t) {\n        var myMap = this;\n        // get rid of the ugly grey background\n        myMap._container.style['background'] = '#ffffff';\n    }\")\n\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"leaflet-tilegrams.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.251","theme":"cosmo","title":"leaflet tilegrams","editor":"visual"},"extensions":{"book":{"multiFile":true}}}}}